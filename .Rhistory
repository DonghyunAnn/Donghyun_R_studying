##for문
# for(var in seq){exp}
for (i in 1:length(c_vector)){
my_vector[i] <- c_vector[i]+d_vector[i]
}
##ifelse문
#ifelse(조건, 'true일때결과','False일때결과')
#table()함수는 성분 개수 샐 때
a_vector_odd <- ifelse(a_vector%%2==0,'even','odd')
getwd()
setwd("C:/Users/user/Documents/github_Rstudio_workspace/Data")
setwd("C:/Users/user/Documents/github_Rstudio_workspace/Data")
getwd()
setwd("C:/Users/user/Documents/github_Rstudio_workspace/Data")
bmi<- read.csv("C:/Users/user/Documents/github_Rstudio_workspace/Data/bmi_clean.csv",header = TRUE)
bmi<- read.csv("C:/Users/user/Documents/github_Rstudio_workspace/Data/bmi_clean.csv",header = TRUE)
str(bmi)
str(bmi)
dim(bmi)
names(bmi)
class(bmi)
summary(bmi)
library("dplyr")
setwd("C:/Users/user/Documents/github_Rstudio_workspace/Data")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "C:/Users/user/Documents/github_Rstudio_workspace/Data")
getwd()
knitr::opts_knit$set(root.dir = "C:/Users/user/Documents/github_Rstudio_workspace/Data")
getwd()
knitr::opts_knit$set(root.dir = "C:/Users/user/Documents/github_Rstudio_workspace/Data")
setwd("C:/Users/user/Documents/github_Rstudio_workspace/Data")
knitr::opts_knit$set(root.dir = "C:/Users/user/Documents/github_Rstudio_workspace/Data")
glimpse(bmi)
#시각화
hist(bmi$Y1980)
library("tidyr")
wide_df <- data.frame(col = c('X', 'Y'), A = c(1,4), B = c(2,5), C = c(3,6))
long_df <- gather(wide_df,my_key, my_val, 2:4)
wide_df <- data.frame(col = c('X', 'Y'), A = c(1,4), B = c(2,5), C = c(3,6))
long_df <- gather(wide_df,my_key, my_val, 2:4)
spread(long_df,my_key,my_val)
#exercise01
bmi_long <- gather(bmi, year, bmi_val, 2:30)
bmi_long
#exercise01
bmi_long <- gather(bmi, year, bmi_val, 2:30)
bmi_long
bmi
bmi_long
bmi
bmi_long
bmi_wide <- spread(bmi_long, year,bmi_val)
bmi_wide
#exercise02
bmic <- read.csv('bmi_cc.csv', header=TRUE)
#exercise02
bmic <- read.csv('C:/Users/user/Documents/github_Rstudio_workspace/Data/bmi_cc.csv', header=TRUE)
head(bmic)
bmic_clean <- separate(bmic,Country_ISO,c('Country','ISO'),sep='/')
unite(bmic_clean,Country_ISO,Country,ISO, sep='/')
date <- c('2010-10-01','2010-12-31')
summary(as.Date(date))
library("stringr")
#exercise3
students2 <- read.csv('C:/Users/user/Documents/github_Rstudio_workspace/Data/students2.csv',header=TRUE,stringsAsFactors = F)
str(students2)
library('lubridate')
students2$dob <- ymd(students2$dob)
students2$nurse_visit <- ymd_hms(students2$nurse_visit)
students2$dob <- ymd(students2$dob)
students2$nurse_visit <- ymd_hms(students2$nurse_visit)
str(students2)
#exercise4
str_detect(students2$dob,'1997')
students3 <- read.csv('C:/Users/user/Documents/github_Rstudio_workspace/Data/students3.csv',header=TRUE,stringsAsFactors = F)
str(students3)
attach(students3)
attach(students3)
age
load(url('https://github.com/hbchoi/SampleData/blob/master/dtree_data.RData?raw=true'))
str(loans)
loan_model <- rpart(outcome~loan_amount+credit_score,data=loans,method='class',
control=rpart.control(cp=0))
library('rpart') #Decision Tree
loan_model <- rpart(outcome~loan_amount+credit_score,data=loans,method='class',
control=rpart.control(cp=0))
rpart.plot(loan_model)
library('rpart.plot') #Decision Tree
library('rpart.plot') #Decision Tree
rpart.plot(loan_model)
loanmodel
loan_model
rpart.plot(loan_model)
star_wars_matrix <- matrix(c(new_hope,empire_strikes,return_jedi),nrow = 3,byrow=TRUE)
star_wars_matrix
matrix(1:9, byrow=TRUE, nrow=3) # 열 방향으로 전개
new_hope <- c(460,314)
empire_strikes <- c(290,247)
return_jedi <- c(309,165)
star_wars_matrix <- matrix(c(new_hope,empire_strikes,return_jedi),nrow = 3,byrow=TRUE)
star_wars_matrix
#Prepruning
loan_model <- rpart(outcome ~ ., data=loans, method='class',
control=rpart.control(cp=0,maxdepth=6))
wbcd <- read.csv("https://github.com/hbchoi/SampleData/raw/master/wisc_bc_data.csv",stringsAsFactors=F)
wbcd <- read.csv("https://github.com/hbchoi/SampleData/raw/master/wisc_bc_data.csv",stringsAsFactors=F)
wbcd <- wbcd[,-1]
table(wbcd$diagnosis)
#min-max normalization for Euclidean Distance
minmax_norm <- function(x){
(x-min(x))/(max(x)-min(x))
}
wbcd_norm <- sapply(wbcd[-1], minmax_norm)
summary(wbcd)
summary(wbcd_norm)
wbcd
